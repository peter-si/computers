---
- name: Copy pacman configuration file
  ansible.builtin.copy:
    src: pacman/pacman.conf
    dest: /etc/pacman.conf

- name: Make sure pacman hooks dir exists
  file: path=/etc/pacman.d/hooks state=directory mode="0755"

- name: Use all cores when compressing packages
  ansible.builtin.lineinfile:
    dest: /etc/makepkg.conf
    regexp: "^COMPRESSXZ"
    line: "COMPRESSXZ=(xz -c -z - --threads=0)"

- name: Create pacman hook directory
  ansible.builtin.file: path=/etc/pacman.d/hooks state=directory

- name: Copy pacman hooks
  ansible.builtin.copy:
    src: "pacman/{{ item }}.hook"
    dest: "/etc/pacman.d/hooks/{{ item }}.hook"
  with_items:
    - arch-audit
    - orphans

- name: Add archlinux gpg keys
  ansible.builtin.command:
    cmd: pacman-key -u --populate archlinux

- name: Refresh pacman mirrors
  ansible.builtin.pacman:
    update_cache: yes

- name: Push pacman cache cleanup service
  ansible.builtin.copy: src=paccache.service dest=/etc/systemd/system/paccache.service
  notify:
    - reload systemd config

- name: Push pacman cache cleanup timer
  ansible.builtin.copy: src=paccache.timer dest=/etc/systemd/system/paccache.timer
  notify:
    - reload systemd config
    - restart paccache

- name: Enable and start pacman cache cleanup timer
  ansible.builtin.systemd: name=paccache.timer enabled=yes
  notify: start paccache

- name: Install reflector
  ansible.builtin.pacman:
    name: reflector
    state: present

- name: Push pacman mirror list update hook
  ansible.builtin.copy:
    src: mirrorlist.hook
    dest: /etc/pacman.d/hooks/mirrorlist.hook

- name: Install AUR packages
  become: yes
  become_user: "{{ user.name }}"
  kewlfft.aur.aur:
    name: "{{ aur_base_packages }}"
    state: present
  tags:
    - aur
  when: aur_base_packages is defined and (aur_base_packages|length>0)
